{"version":3,"sources":["post.js","canvas.js","toolbox.js","App.js","serviceWorker.js","index.js"],"names":["Post","props","this","width","height","lines","isActived","isSelected","strokeWidth","fontSize","init","timer","group","on","d","Date","getTime","active","rect","set","textbox","e","unactive","canvas","frame","originX","originY","top","y","left","x","config","lockScalingY","lockScalingX","lockUniScaling","lockRotation","fabric","Rect","fill","postColor","hasControls","stroke","LimitedTextbox","util","createClass","Textbox","textAlign","hasBorders","breakWords","Group","data","selected","removeWithUpdate","remove","add","setActiveObject","enterEditing","console","log","addWithUpdate","BigCanvas","originWidth","originHeight","minWidth","maxWidth","backgroundColor","zoomFactor","deltaZoomFactor","containerName","isSpaceKeyDown","isMouseDown","preMouseDownPt","currentPostColor","fabricCanvas","Canvas","addListener","document","body","options","which","spaceUp","repeat","key","keyCode","spaceDown","preventDefault","stopPropagation","metaKey","zoomOut","zoomIn","ao","getActiveObject","type","get","getActiveObjects","forEach","obj","target","pointer","getPointer","button","JSON","stringify","units","relativePan","Point","opacity","getWidth","_zoomFactor","clientWidth","clientHeight","event","opt","deltaY","factor","center","setZoom","setWidth","setHeight","length","ToolBoxItem","className","style","onClick","index","attrColor","checked","React","Component","ToolBox","App","selectedIndex","bc","addEventListener","window","ctrlKey","zoom","passive","rightClick","setState","id","color","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.671f72e9.chunk.js","sourcesContent":["import { fabric } from 'fabric'\n\nexport default class Post {\n\n    constructor(props) {\n        this.width = 100;\n        this.height = 100;\n        this.lines = 2;\n        this.isActived = false;\n        this.isSelected = false;\n        this.strokeWidth = 5;\n        this.fontSize = 10;\n\n        this.init(props);\n\n        var timer = 0;\n        this.group.on('mouseup', () => {\n            var d = new Date();\n            timer = d.getTime();\n        });\n        this.group.on('mousedown', () => {\n            var d = new Date();\n            if ((d.getTime() - timer) < 300) {\n                this.active();\n            } else {\n                //鼠标按下去的时候 设置背景色\n                this.rect.set(\"strokeWidth\", this.strokeWidth);\n            }\n        });\n\n        //鼠标抬起来的时候 取消背景色\n        this.group.on('mouseup', () => {\n            this.rect.set(\"strokeWidth\", 0);\n        });\n\n        this.textbox.on('changed', (e) => {\n        });\n\n        this.textbox.on('editing:entered', (e) => {\n        });\n        this.textbox.on('editing:exited', (e) => {\n            this.unactive();\n        });\n    }\n\n    init(props) {\n        this.canvas = props.canvas;\n        const frame = {\n            originX: 'center',\n            originY: 'center',\n            top: props.y,\n            left: props.x,\n            width: this.width,\n            height: this.height\n        };\n\n        const config = {\n            lockScalingY: true,\n            lockScalingX: true,\n            lockUniScaling: true,\n            lockRotation: true,\n        }\n\n        this.rect = new fabric.Rect({\n            ...frame,\n            ...config,\n            fill: props.postColor,\n            hasControls: false,\n            stroke: '#00A2FF',\n            strokeWidth: this.strokeWidth,\n        });\n\n        const LimitedTextbox = fabric.util.createClass(fabric.Textbox, {\n\n        });\n\n\n        this.textbox = new LimitedTextbox('', {\n            ...frame,\n            ...config,\n            width: this.width,\n            top: props.y,\n            fontSize: this.fontSize,\n            textAlign: 'center',\n            // textBaseline: 'middle',\n            // fill: '#f00',\n            hasBorders: false,\n            breakWords: true,\n        });\n\n        this.group = new fabric.Group([], { ...config });\n        this.group.data = this;\n\n        this.active();\n    }\n\n    /**\n     * selected状态是rect被选中，但没有开始编辑文字\n     * 如果文字已开始编辑，则光标暂停\n     */\n    selected() {\n        if (this.isSelected === true) {\n            return;\n        }\n        this.selected = true;\n    }\n\n    /**\n     * 与selected状态相反\n     */\n    unselected() {\n        if (this.selected === false) {\n            return;\n        }\n        this.selected = false;\n    }\n\n    /**\n     * active状态是post背景并且开始编辑文本框\n     * 1.创建的时候\n     * 2.选中该group并输入文字的时候\n     */\n    active() {\n        if (this.isActived) {\n            return;\n        }\n        this.group.removeWithUpdate(this.rect);\n        this.group.removeWithUpdate(this.textbox);\n        this.canvas.remove(this.group);\n\n        this.canvas.add(this.rect);\n        this.canvas.add(this.textbox);\n        this.canvas.setActiveObject(this.textbox);\n\n        this.rect.set(\"strokeWidth\", this.strokeWidth);\n\n        this.textbox.enterEditing();\n\n        this.isActived = true;\n        console.log('active');\n    }\n\n    /**\n     * rect去除选中\n     */\n    unactive() {\n        if (!this.isActived) {\n            return;\n        }\n        this.rect.set(\"strokeWidth\", 0);\n\n        this.canvas.remove(this.rect);\n        this.canvas.remove(this.textbox);\n\n        this.group.addWithUpdate(this.rect);\n        this.group.addWithUpdate(this.textbox);\n        this.canvas.add(this.group);\n\n        this.isActived = false;\n        console.log('unactive');\n    }\n\n    isActived() {\n        return this.isActived;\n    }\n}","import { fabric } from 'fabric'\nimport Post from './post.js'\n\nexport default class BigCanvas {\n    constructor(props) {\n        this.originWidth = 1920;\n        this.originHeight = 1080;\n        this.minWidth = 300;\n        this.maxWidth = 3000;\n        this.backgroundColor = '#C6CDD5';\n        this.zoomFactor = 1;\n        this.deltaZoomFactor = 0.05;//每次缩放的比例\n        this.containerName = props;\n        this.isSpaceKeyDown = false;\n        this.isMouseDown = false;\n        this.preMouseDownPt = null;\n        this.currentPostColor = '#FFF09A';\n        this.fabricCanvas = new fabric.Canvas(props, { width: this.originWidth, height: this.originHeight, backgroundColor: this.backgroundColor });\n\n        fabric.util.addListener(document.body, 'keyup', (options) => {\n            if (options.which === 32) {\n                this.spaceUp();\n            }\n        });\n\n        fabric.util.addListener(document.body, 'keydown', (options) => {\n            if (options.repeat) {\n                return;\n            }\n\n            var key = options.which || options.keyCode; // key detection\n\n            //空格键 拖动\n            if (key === 32) {\n                this.spaceDown();\n                //屏蔽不了浏览器的默认行为？\n                options.preventDefault();\n                options.stopPropagation();\n                return;\n            }\n\n            //Cmd + '+'\n            //Cmd + '-'\n            if (options.metaKey === true) {\n                options.preventDefault();\n                options.stopPropagation();\n                if (options.which === 187) {\n                    this.zoomOut();\n                } else if (key === 189) {\n                    this.zoomIn();\n                }\n            }\n\n            //active object可能是选中的Post or 正在输入的TextBox\n            //需要区分ao是group还是textbox\n            //1.选择group，按delete键则删除\n            //2.选择的是textbox,按delte键则是删除文字\n            const ao = this.fabricCanvas.getActiveObject();\n            if (ao) {\n                const type = ao.get('type');\n                if (type === 'textbox') {\n                    //直接触发文本框的编辑,开始输入文字\n                } else if (type === 'group') {\n                    //删除group\n                    if (key === 8) {\n                        this.fabricCanvas.remove(ao);\n                    }\n                    //触发文本框的编辑，开始输入文字\n                    else {\n                        const post = ao.data;\n                        post.active();\n                    }\n                } else if (type === 'activeSelection') {\n                    if (key === 8) {\n                        this.fabricCanvas.getActiveObjects().forEach((obj) => {\n                            this.fabricCanvas.remove(obj)\n                        });\n                    }\n                }\n            }\n        });\n\n        this.fabricCanvas.on('mouse:dblclick', (e) => {\n            if (!e.target) {\n                const pointer = this.fabricCanvas.getPointer(e.e);\n                new Post({ x: pointer.x, y: pointer.y, canvas: this.fabricCanvas, postColor: this.currentPostColor });\n            } else {\n            }\n        });\n\n        this.fabricCanvas.on('mouse:down', e => {\n            this.isMouseDown = true;\n            this.preMouseDownPt = e.pointer;\n            console.log('down=' + e.button);\n        });\n\n        this.fabricCanvas.on('mouse:move', e => {\n            console.log(`move x=${e.pointer.x},y=${e.pointer.y},v= ${JSON.stringify(e)}`);\n            if (this.isMouseDown && this.isSpaceKeyDown) {\n                const units = e.pointer.x - this.preMouseDownPt.x;\n                this.preMouseDownPt = e.pointer;\n                console.log(`units=${units}`);\n                this.fabricCanvas.relativePan(new fabric.Point(units, 0));\n                console.log('left' + this.fabricCanvas.get('left') + 'width=' + this.fabricCanvas.width);\n            }\n        });\n\n        this.fabricCanvas.on('mouse:up', e => {\n            this.isMouseDown = false;\n            console.log('up');\n        });\n\n        //选择的时候会误判进入这个状态，导致post的背景色设置不上\n        //TODO \n        this.fabricCanvas.on({\n            'object:moving': function (e) {\n                e.target.opacity = 0.5;\n                console.log('moving');\n            },\n            'object:modified': function (e) {\n                e.target.opacity = 1;\n                console.log('modified');\n            }\n        });\n    }\n\n    zoomOut(x, y) {\n        if (this.fabricCanvas.getWidth() > this.maxWidth) {\n            return;\n        }\n        this.zoomFactor += this.deltaZoomFactor;\n        this._zoomFactor(this.zoomFactor, { x: document.body.clientWidth / 2, y: document.body.clientHeight / 2 });\n    }\n\n    zoomIn(x, y) {\n        if (this.fabricCanvas.getWidth() < this.minWidth) {\n            return;\n        }\n        this.zoomFactor -= this.deltaZoomFactor;\n        this._zoomFactor(this.zoomFactor, { x: document.body.clientWidth / 2, y: document.body.clientHeight / 2 });\n    }\n\n    zoom(event) {\n        const opt = this.fabricCanvas.getPointer(event);\n        event.deltaY < 0 ? this.zoomOut(opt.x, opt.y) : this.zoomIn(opt.x, opt.y);\n    }\n\n    //1.设置鼠标的cursor\n    //2.监听鼠标移动事件\n    spaceDown() {\n        console.log('空格键按下');\n        this.isSpaceKeyDown = true;\n    }\n\n    spaceUp() {\n        console.log('空格键弹起来');\n        this.isSpaceKeyDown = false;\n    }\n\n    _zoomFactor(factor, center) {\n        //没有居中缩放\n        this.fabricCanvas.setZoom(factor);\n        this.fabricCanvas.setWidth(this.originWidth * this.zoomFactor);\n        this.fabricCanvas.setHeight(this.originHeight * this.zoomFactor);\n    }\n\n    rightClick(event) {\n        const objects = this.fabricCanvas.getActiveObjects();\n        if (objects.length > 0) {\n\n        }\n        // const opt = this.fabricCanvas.getPointer(event);\n        // var objects = this.fabricCanvas.getObjects();\n        // for (var i = objects.length - 1; i >= 0; i--) {\n        //     var object = objects[i];\n        //     //判断该对象是否在鼠标点击处\n        //     if (this.fabricCanvas.containsPoint(event, object)) {\n        //         //选中该对象\n        //     }\n        // }\n    }\n}","import React from 'react';\nimport './App.css';\n\nclass ToolBoxItem extends React.Component {\n    render() {\n        return (\n            <div className='toolbox-attr' style={this.props.style} onClick={() => this.props.onClick && this.props.onClick(this.props.index, this.props.attrColor)}>\n                {this.props.currentPostColor === this.props.attrColor ? <input className='toolbox-checkbox' type='checkbox' checked /> : null}\n            </div>\n        )\n    }\n}\n\nexport default class ToolBox extends React.Component {\n    render() {\n        return (\n            <div className='toolbox-container'>\n                <ToolBoxItem {...this.props} style={{ backgroundColor: '#FFF09A' }} index={0} attrColor='#FFF09A' />\n                <ToolBoxItem {...this.props} style={{ backgroundColor: '#FF968D' }} index={1} attrColor='#FF968D' />\n                <ToolBoxItem {...this.props} style={{ backgroundColor: '#C4F9F4' }} index={2} attrColor='#C4F9F4' />\n                <ToolBoxItem {...this.props} style={{ backgroundColor: '#B191E6' }} index={3} attrColor='#B191E6' />\n            </div>\n        );\n    }\n};\n","import React from 'react';\nimport './App.css';\nimport BigCanvas from './canvas'\nimport ToolBox from './toolbox'\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.selectedIndex = 0\n  }\n\n  componentDidMount() {\n    //{ 'canvas':canvas } 不行?\n    this.bc = new BigCanvas('canvas');\n\n    document.addEventListener('keydown', event => {\n      //屏蔽浏览器响应空格键的默认行为\n      if (event.which === 32) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    });\n\n    //阻止触控板的放大缩小\n    //设置passive = true\n    //event.deltaY 放大为负 缩小为正\n    window.addEventListener('mousewheel', event => {\n      if (event.ctrlKey === true) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.bc.zoom(event);\n      }\n    }, { passive: false });\n\n    //右键\n    window.addEventListener('contextmenu', event => {\n      event.preventDefault();\n      event.stopPropagation();\n      this.bc.rightClick(event);\n    });\n\n    this.setState({\n      canvas: this.bc,\n    });\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <canvas className='canvas' id='canvas' />\n        <ToolBox className='toolbox' id='toolbox' currentPostColor={this.bc ? this.bc.currentPostColor : ''} onClick={(index, color) => {\n          this.bc.currentPostColor = color;\n          this.setState({\n            canvas: this.bc,\n          });\n        }} />\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}