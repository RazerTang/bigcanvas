{"version":3,"sources":["Post.js","Canvas.js","App.js","serviceWorker.js","index.js"],"names":["Post","props","this","width","height","lines","isActived","strokeWidth","fontSize","init","timer","group","on","d","Date","getTime","active","rect","set","textbox","e","unactive","canvas","frame","originX","originY","top","y","left","x","config","lockScalingY","lockScalingX","lockUniScaling","lockRotation","fabric","Rect","fill","hasControls","stroke","LimitedTextbox","util","createClass","Textbox","textAlign","hasBorders","breakWords","Group","data","removeWithUpdate","remove","add","setActiveObject","enterEditing","console","log","addWithUpdate","BigCanvas","canvasObj","originWidth","originHeight","backgroundColor","fabricCanvas","Canvas","addListener","document","body","options","repeat","key","which","keyCode","ao","getActiveObject","type","get","getActiveObjects","forEach","obj","target","alert","JSON","stringify","pointer","opacity","opt","delta","deltaY","zoom","getZoom","setZoom","preventDefault","stopPropagation","setWidth","setHeight","getElementById","className","id","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d0588626.chunk.js","sourcesContent":["import { fabric } from 'fabric'\n\n// fabric.Text.prototype.calcTextHeight = function () {\n//     var lineHeight, height = 0;\n//     for (var i = 0, len = this._textLines.length; i < len; i++) {\n//         lineHeight = this.getHeightOfLine(i);\n//         height += lineHeight;\n//     }\n//     return height;\n// };\n\n// fabric.Text.prototype.getMaxTextWidth = function () {\n//     var maxWidth = this.getLineWidth(0)\n//     for (var i = 0, len = this._textLines.length; i < len; i++) {\n//         maxWidth = Math.max(maxWidth, this.getLineWidth(i));\n\n//     }\n//     return maxWidth;\n// }\n\n\n\nexport default class Post {\n\n    constructor(props) {\n        this.width = 100;\n        this.height = 100;\n        this.lines = 2;\n        this.isActived = false;\n        this.strokeWidth = 5;\n        this.fontSize = 10;\n\n        this.init(props);\n\n        var timer = 0;\n        this.group.on('mouseup', () => {\n            var d = new Date();\n            timer = d.getTime();\n        });\n        this.group.on('mousedown', () => {\n            var d = new Date();\n            if ((d.getTime() - timer) < 300) {\n                this.active();\n            } else {\n                //鼠标按下去的时候 设置背景色\n                this.rect.set(\"strokeWidth\", this.strokeWidth);\n            }\n        });\n\n        //鼠标抬起来的时候 取消背景色\n        this.group.on('mouseup', () => {\n            this.rect.set(\"strokeWidth\", 0);\n        });\n\n        this.textbox.on('changed', (e) => {\n        });\n\n        this.textbox.on('editing:entered', (e) => {\n        });\n        this.textbox.on('editing:exited', (e) => {\n            this.unactive();\n        });\n    }\n\n    init(props) {\n        this.canvas = props.canvas;\n        const frame = {\n            originX: 'center',\n            originY: 'center',\n            top: props.y,\n            left: props.x,\n            width: this.width,\n            height: this.height\n        };\n\n        const config = {\n            lockScalingY: true,\n            lockScalingX: true,\n            lockUniScaling: true,\n            lockRotation: true,\n        }\n\n        this.rect = new fabric.Rect({\n            ...frame,\n            ...config,\n            fill: '#FFF09A',\n            hasControls: false,\n            stroke: '#00A2FF',\n            strokeWidth: this.strokeWidth,\n        });\n\n        const LimitedTextbox = fabric.util.createClass(fabric.Textbox, {\n\n        });\n\n\n        this.textbox = new LimitedTextbox('', {\n            ...frame,\n            ...config,\n            width: this.width,\n            top: props.y,\n            fontSize: this.fontSize,\n            textAlign: 'center',\n            // textBaseline: 'middle',\n            fill: '#000',\n            hasBorders: false,\n            breakWords: true,\n        });\n\n        this.group = new fabric.Group([], { ...config });\n        this.group.data = this;\n\n\n        this.active();\n    }\n\n    /**\n     * active可以激活的两个图形\n     * 1.创建的时候\n     * 2.选中该group并输入文字的时候\n     */\n    active() {\n        if (this.isActived) {\n            return;\n        }\n        this.group.removeWithUpdate(this.rect);\n        this.group.removeWithUpdate(this.textbox);\n        this.canvas.remove(this.group);\n\n        this.canvas.add(this.rect);\n        this.canvas.add(this.textbox);\n        this.canvas.setActiveObject(this.textbox);\n\n        this.rect.set(\"strokeWidth\", this.strokeWidth);\n\n        this.textbox.enterEditing();\n\n        this.isActived = true;\n        console.log('active');\n    }\n\n    /**\n     * unactive的条件为文字编辑状态消失的时候\n     */\n    unactive() {\n        if (!this.isActived) {\n            return;\n        }\n        this.rect.set(\"strokeWidth\", 0);\n\n        this.canvas.remove(this.rect);\n        this.canvas.remove(this.textbox);\n\n        this.group.addWithUpdate(this.rect);\n        this.group.addWithUpdate(this.textbox);\n        this.canvas.add(this.group);\n\n        this.isActived = false;\n        console.log('unactive');\n    }\n\n    isActived() {\n        return this.isActived;\n    }\n}","import { fabric } from 'fabric'\nimport Post from './Post.js'\n\nexport default class BigCanvas {\n    constructor(props) {\n        const canvasObj = props;\n        this.originWidth = 1024;\n        this.originHeight = 1024;\n        this.backgroundColor = '#C6CDD5';\n        const fabricCanvas = new fabric.Canvas(canvasObj, { width: this.originWidth, height: this.originHeight, backgroundColor: this.backgroundColor });\n        fabric.util.addListener(document.body, 'keydown', function (options) {\n            if (options.repeat) {\n                return;\n            }\n            var key = options.which || options.keyCode; // key detection\n\n            //active object可能是选中的Post or 正在输入的TextBox\n            //需要区分ao是group还是textbox\n            //1.选择group，按delete键则删除\n            //2.选择的是textbox,按delte键则是删除文字\n            const ao = fabricCanvas.getActiveObject();\n            if (ao) {\n                const type = ao.get('type');\n                console.log(type);\n                if (type === 'textbox') {\n                    //直接触发文本框的编辑,开始输入文字\n                } else if (type === 'group') {\n                    //删除group\n                    if (key === 8) {\n                        fabricCanvas.remove(ao);\n                    }\n                    //触发文本框的编辑，开始输入文字\n                    else {\n                        const post = ao.data;\n                        post.active();\n                    }\n                } else if (type === 'activeSelection') {\n                    if (key === 8) {\n                        fabricCanvas.getActiveObjects().forEach((obj) => {\n                            fabricCanvas.remove(obj)\n                        });\n                    }\n                }\n            }\n        });\n\n        fabricCanvas.on('mouse:dblclick', (e) => {\n            if (!e.target) {\n                alert(JSON.stringify(e.pointer))\n                new Post({ x: e.pointer.x, y: e.pointer.y, canvas: fabricCanvas });\n            } else {\n            }\n        });\n\n        //选择的时候会误判进入这个状态，导致post的背景色设置不上\n        //TODO \n        fabricCanvas.on({\n            'object:moving': function (e) {\n                e.target.opacity = 0.5;\n                console.log('moving');\n            },\n            'object:modified': function (e) {\n                e.target.opacity = 1;\n                console.log('modified');\n            }\n        });\n\n        // this.panning = false;\n        // //鼠标按下\n        // fabricCanvas.on('mouse:down', (e) => {\n        //     //按住alt键才可拖动画布\n        //     if (e.e.altKey) {\n        //         this.panning = true;\n        //         fabricCanvas.selection = false;\n        //     }\n        // });\n\n        // //鼠标抬起\n        // fabricCanvas.on('mouse:up', (e) => {\n        //     this.panning = false;\n        //     fabricCanvas.selection = true;\n        // });\n\n        // //鼠标移动\n        // fabricCanvas.on('mouse:move', (e) => {\n        //     if (this.panning && e && e.e) {\n        //         var delta = new fabric.Point(e.e.movementX, e.e.movementY);\n        //         fabricCanvas.relativePan(delta);\n        //     }\n        // });\n\n        //鼠标滚轮监听\n        fabricCanvas.on('mouse:wheel', (opt) => {\n            var delta = opt.e.deltaY;\n            var zoom = fabricCanvas.getZoom();\n            zoom = zoom + delta / 200;\n            if (zoom > 20) zoom = 20;\n            if (zoom < 0.01) zoom = 0.01;\n            console.log(zoom);\n            fabricCanvas.setZoom(zoom);\n            opt.e.preventDefault();\n            opt.e.stopPropagation();\n            fabricCanvas.setWidth(this.originWidth * zoom);\n            fabricCanvas.setHeight(this.originHeight * zoom);\n        });\n    }\n}","import React from 'react';\nimport './App.css';\nimport BigCanvas from './Canvas'\n\nexport default class Canvas extends React.Component {\n\n  componentDidMount() {\n    const canvas = document.getElementById('c');\n    //{ 'canvas':canvas } 不行?\n    let bc = new BigCanvas(canvas);\n  }\n\n  render() {\n    return (\n      <div className='bcContainer' >\n        <canvas className='c' id='c' />\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}